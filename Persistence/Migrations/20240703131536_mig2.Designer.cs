// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AcousticDbContext))]
    [Migration("20240703131536_mig2")]
    partial class mig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7649),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7651),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7658),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7659),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7663),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7663),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 6, 28, 8, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 27, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 6, 27, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 6, 27, 10, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 51,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 56,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 100,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 101,
                            AppointmentTime = new DateTime(2024, 7, 4, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 102,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 103,
                            AppointmentTime = new DateTime(2024, 7, 4, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 104,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 105,
                            AppointmentTime = new DateTime(2024, 7, 4, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 106,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 107,
                            AppointmentTime = new DateTime(2024, 7, 4, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 108,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 109,
                            AppointmentTime = new DateTime(2024, 7, 4, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 110,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 111,
                            AppointmentTime = new DateTime(2024, 7, 4, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 112,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 113,
                            AppointmentTime = new DateTime(2024, 7, 4, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(7860),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorSpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorSpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Biography = "Id 3 olan Doktor Özgeçmiş Example asd",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7491),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7498),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7499),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7501),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7501),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7502),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7503),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7504),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7505),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7506),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7507),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7508),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7509),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7539),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 17,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7540),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 18,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7541),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 19,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7542),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 20,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7543),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 21,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7544),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 22,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7545),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 23,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7546),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 24,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7547),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 25,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7548),
                            DoctorSpecializationId = 1,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 26,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7548),
                            DoctorSpecializationId = 5,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 27,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7549),
                            DoctorSpecializationId = 8,
                            Experience = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("DoctorInterests");

                    b.HasData(
                        new
                        {
                            DoctorId = 3,
                            InterestId = 1
                        },
                        new
                        {
                            DoctorId = 3,
                            InterestId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 7
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DoctorSpecializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6298),
                            NameEN = "Neurosurgery",
                            NameTR = "Beyin ve Sinir Cerrahisi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6312),
                            NameEN = "Dermatology",
                            NameTR = "Dermatoloji"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6313),
                            NameEN = "General Surgery",
                            NameTR = "Genel Cerrahi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6314),
                            NameEN = "Ophthalmology",
                            NameTR = "Göz Hastalıkları"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6315),
                            NameEN = "Internal Medicine",
                            NameTR = "İç Hastalıkları"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6316),
                            NameEN = "Obstetrics and Gynecology",
                            NameTR = "Kadın Hastalıkları ve Doğum"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6317),
                            NameEN = "Otorhinolaryngology",
                            NameTR = "Kulak Burun Boğaz"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6318),
                            NameEN = "Orthopedics and Traumatology",
                            NameTR = "Ortopedi ve Travmatoloji"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6319),
                            NameEN = "Urology",
                            NameTR = "Üroloji"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6320),
                            NameEN = "Pediatrics",
                            NameTR = "Çocuk Sağlığı ve Hastalıkları"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8041),
                            Name = "Kardiyoloji Araştırmaları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8051),
                            Name = "Çocuk Sağlığı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8055),
                            Name = "Onkoloji Tedavi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8059),
                            Name = "Nöroloji ve Beyin Cerrahisi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8062),
                            Name = "Endokrinoloji ve Metabolizma"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8066),
                            Name = "Gastroenteroloji ve Sindirim Sistemi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8069),
                            Name = "Psikiyatri ve Mental Sağlık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8072),
                            Name = "Aile Hekimliği ve Birinci Basamak Sağlık Hizmetleri"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8075),
                            Name = "Parkinson Hastalığı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8079),
                            Name = "Bunama"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6559),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6569),
                            Name = "Appointment.Delete"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6573),
                            Name = "Doctor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Main St",
                            AppointmentId = 0,
                            BloodType = "A+",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7388)
                        },
                        new
                        {
                            Id = 2,
                            Address = "1233 Main St",
                            AppointmentId = 0,
                            BloodType = "B+",
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7396)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosageInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationFindings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8309),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8317),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8321),
                            Diagnosis = "Diabetes Mellitus",
                            ExaminationFindings = "Fasting blood sugar level of 140 mg/dL"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 4,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(8325),
                            Diagnosis = "Chronic Obstructive Pulmonary Disease (COPD)",
                            ExaminationFindings = "Reduced lung function on spirometry"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7212),
                            Email = "hasta1@example.com",
                            FirstName = "John",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Doe",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234567890",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7222),
                            Email = "hasta2@example.com",
                            FirstName = "Jonathan",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Corwin",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234512345",
                            UserType = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7226),
                            Email = "doktor1@example.com",
                            FirstName = "batu",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "cerrahlar",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234512312",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7230),
                            Email = "doktor4@example.com",
                            FirstName = "Fatma",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Koç",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500004",
                            UserType = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7231),
                            Email = "doktor5@example.com",
                            FirstName = "Mehmet",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Öz",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500005",
                            UserType = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7233),
                            Email = "doktor6@example.com",
                            FirstName = "Canan",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Çelik",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500006",
                            UserType = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7234),
                            Email = "doktor7@example.com",
                            FirstName = "Emre",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Arı",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500007",
                            UserType = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7236),
                            Email = "doktor8@example.com",
                            FirstName = "Burak",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Temiz",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500008",
                            UserType = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7237),
                            Email = "doktor9@example.com",
                            FirstName = "Seda",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Ak",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500009",
                            UserType = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7239),
                            Email = "doktor10@example.com",
                            FirstName = "Murat",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Tez",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500010",
                            UserType = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7240),
                            Email = "doktor11@example.com",
                            FirstName = "Zeynep",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Bal",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500011",
                            UserType = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7241),
                            Email = "doktor12@example.com",
                            FirstName = "Kemal",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Sağ",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500012",
                            UserType = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7243),
                            Email = "doktor13@example.com",
                            FirstName = "Cansu",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Dur",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500013",
                            UserType = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7244),
                            Email = "doktor14@example.com",
                            FirstName = "Oğuz",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Kurt",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500014",
                            UserType = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7246),
                            Email = "doktor15@example.com",
                            FirstName = "Esra",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Deniz",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500015",
                            UserType = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7247),
                            Email = "doktor16@example.com",
                            FirstName = "Baran",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Gül",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500016",
                            UserType = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7249),
                            Email = "doktor17@example.com",
                            FirstName = "Duygu",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Aydın",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500017",
                            UserType = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7250),
                            Email = "doktor18@example.com",
                            FirstName = "Tarkan",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Kara",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500018",
                            UserType = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7252),
                            Email = "doktor19@example.com",
                            FirstName = "Nil",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Koç",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500019",
                            UserType = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7253),
                            Email = "doktor20@example.com",
                            FirstName = "Sami",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Öztürk",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500020",
                            UserType = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7255),
                            Email = "doktor21@example.com",
                            FirstName = "Ece",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Uzun",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500021",
                            UserType = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7256),
                            Email = "doktor22@example.com",
                            FirstName = "Levent",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Yıldız",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500022",
                            UserType = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7257),
                            Email = "doktor23@example.com",
                            FirstName = "Selin",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Demirci",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500023",
                            UserType = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7259),
                            Email = "doktor24@example.com",
                            FirstName = "Onur",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Akar",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500024",
                            UserType = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7260),
                            Email = "doktor25@example.com",
                            FirstName = "İrem",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Dere",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500025",
                            UserType = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7262),
                            Email = "doktor26@example.com",
                            FirstName = "Cenk",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Taş",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500026",
                            UserType = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7263),
                            Email = "doktor27@example.com",
                            FirstName = "Hande",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Yener",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234500027",
                            UserType = 1
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(2024, 7, 3, 13, 15, 35, 941, DateTimeKind.Utc).AddTicks(7278),
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "Yöneticioğlu",
                            PasswordHash = new byte[] { 205, 82, 193, 236, 91, 243, 142, 33, 230, 132, 25, 131, 87, 210, 247, 87, 62, 155, 60, 142, 128, 33, 222, 78, 65, 214, 43, 15, 56, 62, 174, 167, 250, 54, 106, 45, 74, 191, 124, 152, 216, 144, 234, 173, 52, 201, 33, 71, 47, 58, 184, 72, 19, 218, 32, 7, 126, 101, 56, 234, 171, 145, 138, 70 },
                            PasswordSalt = new byte[] { 224, 144, 254, 193, 96, 154, 188, 45, 41, 219, 189, 119, 85, 223, 116, 38, 184, 40, 131, 123, 106, 139, 44, 227, 226, 149, 74, 40, 204, 47, 6, 185, 183, 147, 164, 67, 217, 140, 190, 69, 133, 12, 194, 137, 227, 31, 147, 149, 170, 185, 33, 118, 11, 43, 185, 63, 211, 19, 173, 172, 176, 166, 109, 237, 236, 231, 122, 47, 232, 138, 248, 161, 187, 177, 104, 134, 14, 105, 3, 169, 20, 135, 178, 177, 244, 159, 99, 249, 119, 232, 216, 128, 213, 0, 192, 213, 251, 48, 176, 137, 201, 130, 217, 99, 45, 4, 245, 227, 65, 101, 5, 192, 221, 4, 206, 240, 219, 37, 235, 200, 14, 85, 115, 118, 148, 147, 204, 82 },
                            PhoneNumber = "1234512345",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6669),
                            OperationClaimId = 1,
                            UserId = 5
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6677),
                            OperationClaimId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6682),
                            OperationClaimId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 3, 16, 15, 35, 941, DateTimeKind.Local).AddTicks(6685),
                            OperationClaimId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointment")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Patient", "Patient")
                        .WithMany("Appointment")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Domain.Entities.DoctorSpecialization", "DoctorSpecialization")
                        .WithMany()
                        .HasForeignKey("DoctorSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("Domain.Entities.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorSpecialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorInterest")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Interest", "Interest")
                        .WithMany("DoctorInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("Domain.Entities.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithMany("Prescriptions")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithOne("Report")
                        .HasForeignKey("Domain.Entities.Report", "AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Report")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointment");

                    b.Navigation("DoctorInterest");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Navigation("DoctorInterests");
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
