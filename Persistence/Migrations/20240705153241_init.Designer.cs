// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AcousticDbContext))]
    [Migration("20240705153241_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(506),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(511),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(522),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(524),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(529),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(530),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 6, 28, 8, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 27, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 6, 27, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 6, 27, 10, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 51,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 56,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 100,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 101,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 102,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 103,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 104,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 105,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 106,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 107,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 108,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 109,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 110,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 111,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 112,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 113,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(735),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorSpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorSpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Biography = "Id 3 olan Doktor Özgeçmiş Example asd",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(242),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(251),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(252),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(253),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(254),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(255),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(256),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(257),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(258),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(259),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(260),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(261),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(262),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(263),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 17,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(264),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 18,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(265),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 19,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(267),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 20,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(268),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 21,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(269),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 22,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(270),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 23,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(271),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 24,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(272),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 25,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(273),
                            DoctorSpecializationId = 1,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 26,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(274),
                            DoctorSpecializationId = 5,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 27,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(275),
                            DoctorSpecializationId = 8,
                            Experience = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("DoctorInterests");

                    b.HasData(
                        new
                        {
                            DoctorId = 3,
                            InterestId = 1
                        },
                        new
                        {
                            DoctorId = 3,
                            InterestId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 7
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DoctorSpecializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5495),
                            NameEN = "Neurosurgery",
                            NameTR = "Beyin ve Sinir Cerrahisi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5511),
                            NameEN = "Dermatology",
                            NameTR = "Dermatoloji"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5513),
                            NameEN = "General Surgery",
                            NameTR = "Genel Cerrahi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5514),
                            NameEN = "Ophthalmology",
                            NameTR = "Göz Hastalıkları"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5515),
                            NameEN = "Internal Medicine",
                            NameTR = "İç Hastalıkları"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5516),
                            NameEN = "Obstetrics and Gynecology",
                            NameTR = "Kadın Hastalıkları ve Doğum"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5517),
                            NameEN = "Otorhinolaryngology",
                            NameTR = "Kulak Burun Boğaz"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5518),
                            NameEN = "Orthopedics and Traumatology",
                            NameTR = "Ortopedi ve Travmatoloji"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5519),
                            NameEN = "Urology",
                            NameTR = "Üroloji"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5520),
                            NameEN = "Pediatrics",
                            NameTR = "Çocuk Sağlığı ve Hastalıkları"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1017),
                            Name = "Kardiyoloji Araştırmaları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1028),
                            Name = "Çocuk Sağlığı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1032),
                            Name = "Onkoloji Tedavi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1036),
                            Name = "Nöroloji ve Beyin Cerrahisi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1040),
                            Name = "Endokrinoloji ve Metabolizma"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1044),
                            Name = "Gastroenteroloji ve Sindirim Sistemi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1048),
                            Name = "Psikiyatri ve Mental Sağlık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1051),
                            Name = "Aile Hekimliği ve Birinci Basamak Sağlık Hizmetleri"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1103),
                            Name = "Parkinson Hastalığı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1109),
                            Name = "Bunama"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5784),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5796),
                            Name = "Appointment.Delete"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5800),
                            Name = "Doctor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Main St",
                            AppointmentId = 0,
                            BloodType = "A+",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(110)
                        },
                        new
                        {
                            Id = 2,
                            Address = "1233 Main St",
                            AppointmentId = 0,
                            BloodType = "B+",
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 283, DateTimeKind.Utc).AddTicks(123)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosageInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1529),
                            DosageInstructions = "Take one tablet by mouth every 8 hours.",
                            IsDeleted = false,
                            MedicationDetails = "Amoxicillin 500mg"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1537),
                            DosageInstructions = "Take two tablets by mouth every 12 hours.",
                            IsDeleted = false,
                            MedicationDetails = "Ibuprofen 200mg"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1542),
                            DosageInstructions = "Apply cream to the affected area twice daily.",
                            IsDeleted = false,
                            MedicationDetails = "Hydrocortisone Cream 1%"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1546),
                            DosageInstructions = "Take one capsule by mouth every morning.",
                            IsDeleted = false,
                            MedicationDetails = "Omeprazole 20mg"
                        },
                        new
                        {
                            Id = 5,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1550),
                            DosageInstructions = "Inhale two puffs every 4-6 hours as needed.",
                            IsDeleted = false,
                            MedicationDetails = "Albuterol Inhaler"
                        },
                        new
                        {
                            Id = 6,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1556),
                            DosageInstructions = "Take one tablet by mouth every night before bed.",
                            IsDeleted = false,
                            MedicationDetails = "Metformin 500mg"
                        },
                        new
                        {
                            Id = 7,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1560),
                            DosageInstructions = "Take one tablet by mouth once daily.",
                            IsDeleted = false,
                            MedicationDetails = "Lisinopril 10mg"
                        },
                        new
                        {
                            Id = 8,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1564),
                            DosageInstructions = "Take one tablet by mouth every 6 hours as needed for pain.",
                            IsDeleted = false,
                            MedicationDetails = "Acetaminophen 500mg"
                        },
                        new
                        {
                            Id = 9,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1568),
                            DosageInstructions = "Take one tablet by mouth twice daily.",
                            IsDeleted = false,
                            MedicationDetails = "Atenolol 50mg"
                        },
                        new
                        {
                            Id = 10,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1573),
                            DosageInstructions = "Apply drops in the affected eye(s) twice daily.",
                            IsDeleted = false,
                            MedicationDetails = "Timolol Eye Drops"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationFindings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1378),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1390),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1394),
                            Diagnosis = "Diabetes Mellitus",
                            ExaminationFindings = "Fasting blood sugar level of 140 mg/dL"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 283, DateTimeKind.Local).AddTicks(1398),
                            Diagnosis = "Chronic Obstructive Pulmonary Disease (COPD)",
                            ExaminationFindings = "Reduced lung function on spirometry"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(6976),
                            Email = "hasta1@example.com",
                            FirstName = "46fw7Rk8/m7cXdvb9VCuiw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "IY+uLFq91e9Pl1fZz9KL+g==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234567890",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7118),
                            Email = "hasta2@example.com",
                            FirstName = "lx191yNB5UTgUeNqX1QIZQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "ESeBAof1D3qOrdvr0NsjqQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234512345",
                            UserType = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7192),
                            Email = "doktor1@example.com",
                            FirstName = "JJIVK0Z5Q3xurg/5rwsjpw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "SbwDEUPBok2ObkCL8mzFcQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234512312",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7303),
                            Email = "doktor4@example.com",
                            FirstName = "FfeaE5zn6NjabjeVhYSrEQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "dwMtHvVvQqj6d7sMPCqIjg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500004",
                            UserType = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7394),
                            Email = "doktor5@example.com",
                            FirstName = "+au//BigQ3yTZoy4bkmhhQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "dzHbICsDLYy/vGyYJIPZfQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500005",
                            UserType = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7488),
                            Email = "doktor6@example.com",
                            FirstName = "Mh0v4J32+JlNpaD/O7+qSA==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "+hNFC6xqdqf8w9sO855a0Q==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500006",
                            UserType = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7583),
                            Email = "doktor7@example.com",
                            FirstName = "Ibn6o8AedzQLx6T8v7QyWQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "qApbKXsPUcTvGAWZiov2eg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500007",
                            UserType = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7776),
                            Email = "doktor8@example.com",
                            FirstName = "QRc31Nk0c/N3r0eGOY3tJg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "crndYAoJPeqqluXZHHwnzQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500008",
                            UserType = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7892),
                            Email = "doktor9@example.com",
                            FirstName = "2vpZVUEDo5Auij4xmX6p/w==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "pnrXKW7b8Nkl2aPQe6wmIA==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500009",
                            UserType = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(7980),
                            Email = "doktor10@example.com",
                            FirstName = "qZKdo9nxms9FWbRIQ6mDQg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "72UZHOJjBL5fuqnE5KqkAA==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500010",
                            UserType = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8088),
                            Email = "doktor11@example.com",
                            FirstName = "jj9UNKyFcbh2ikUCQQDWyw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Etzl4OT8hsUVt6ZxK/O0LA==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500011",
                            UserType = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8150),
                            Email = "doktor12@example.com",
                            FirstName = "Q4daCkyHEECDbBgMNxgSIA==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "/Q9/SHuMD9cCphQ2hpSmJg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500012",
                            UserType = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8264),
                            Email = "doktor13@example.com",
                            FirstName = "w+eXoITM5M9bWhvdxONk6g==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "jzee7V57E88iuKsNYWgVYw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500013",
                            UserType = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8364),
                            Email = "doktor14@example.com",
                            FirstName = "onmhUNgVYSb9KJWjNTgeig==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "QjBL/R6X9KC7lG1rhgidbw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500014",
                            UserType = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8541),
                            Email = "doktor15@example.com",
                            FirstName = "Fvj3ZYvX8aHqo+f8cu9Hgw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "IqHJenJjFanZMJg+oHogDw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500015",
                            UserType = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8648),
                            Email = "doktor16@example.com",
                            FirstName = "2OrR7nTyK7M9EzSHBXuaOw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "PQ79eSlatrg1jKu+RShUWw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500016",
                            UserType = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8743),
                            Email = "doktor17@example.com",
                            FirstName = "CxBc6OuQft7mnBW4YZ2RmQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "M/0Rh8M/57cW6K5KSeg/wQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500017",
                            UserType = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8840),
                            Email = "doktor18@example.com",
                            FirstName = "v8S/QBqz7DdlbUyIGJVanw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "HEnM1rpNCBeMA1OQBWYQQA==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500018",
                            UserType = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8929),
                            Email = "doktor19@example.com",
                            FirstName = "qQeUOmjbsPj9QrelGnJ0xw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "dwMtHvVvQqj6d7sMPCqIjg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500019",
                            UserType = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(8991),
                            Email = "doktor20@example.com",
                            FirstName = "XGLB1Jqkf8ye3RiI7REdtg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "asHqAzJLyIiq8nFybKhJ9Q==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500020",
                            UserType = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9107),
                            Email = "doktor21@example.com",
                            FirstName = "E6GrrCDe0S5fe/J0cQT0QQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "F5wwQbK4qmtX1bWH9FPM4w==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500021",
                            UserType = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9217),
                            Email = "doktor22@example.com",
                            FirstName = "NTN4MQGjhs5QmulzI20AUQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "3uGzHpqFlftm4h46r6sCvg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500022",
                            UserType = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9309),
                            Email = "doktor23@example.com",
                            FirstName = "F9vfnlFH27RRbGIAlLcUrg==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "zxIs9+mg1FC/hF/oGsX7yg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500023",
                            UserType = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9404),
                            Email = "doktor24@example.com",
                            FirstName = "76Jr0erPduMYIgqOy5Gm2A==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "ZVYa/Ha75fykIUoBnPYU2w==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500024",
                            UserType = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9502),
                            Email = "doktor25@example.com",
                            FirstName = "Gnvo6mwNUF/bN9v9ID485w==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "qJCxvSS+EnCd4srQEbeJvw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500025",
                            UserType = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9596),
                            Email = "doktor26@example.com",
                            FirstName = "Erzb68h8hV8wJ2vAGBiz5Q==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "tZEaxP2Ab3PHXSqcANuRYw==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500026",
                            UserType = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9757),
                            Email = "doktor27@example.com",
                            FirstName = "RHmGtLmFF2rZIizvT6WWJg==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "cUcUFQAnZR4CocSgPu3OUg==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234500027",
                            UserType = 1
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(2024, 7, 5, 15, 32, 41, 282, DateTimeKind.Utc).AddTicks(9883),
                            Email = "admin@example.com",
                            FirstName = "aNbdnOzUNuGnMPCOxe7GbA==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "7ZoRxRkAs9bCJPAAcPqRUQ==",
                            PasswordHash = new byte[] { 36, 219, 203, 153, 134, 168, 63, 114, 57, 96, 171, 81, 197, 131, 116, 89, 129, 89, 142, 129, 162, 109, 217, 222, 124, 97, 97, 81, 129, 147, 10, 67, 93, 47, 252, 236, 210, 68, 126, 139, 214, 163, 238, 31, 226, 124, 19, 158, 30, 9, 149, 105, 1, 235, 155, 250, 15, 89, 60, 91, 54, 33, 245, 145 },
                            PasswordSalt = new byte[] { 121, 251, 163, 1, 32, 249, 142, 50, 122, 247, 105, 221, 204, 30, 151, 65, 52, 102, 92, 215, 176, 65, 227, 167, 13, 219, 184, 177, 22, 249, 176, 65, 143, 202, 222, 4, 59, 164, 206, 136, 141, 8, 52, 114, 38, 219, 40, 70, 140, 48, 119, 108, 228, 23, 45, 10, 95, 39, 134, 18, 109, 239, 12, 225, 202, 6, 217, 154, 36, 93, 146, 34, 223, 111, 217, 115, 32, 255, 75, 116, 210, 95, 76, 68, 162, 141, 10, 208, 174, 253, 255, 250, 61, 70, 46, 186, 25, 112, 71, 160, 186, 251, 177, 145, 189, 88, 177, 3, 90, 40, 250, 43, 156, 225, 27, 249, 128, 179, 163, 125, 9, 82, 75, 37, 120, 201, 190, 13 },
                            PhoneNumber = "1234512345",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5921),
                            OperationClaimId = 1,
                            UserId = 99
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5988),
                            OperationClaimId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5995),
                            OperationClaimId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 18, 32, 41, 282, DateTimeKind.Local).AddTicks(5999),
                            OperationClaimId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointment")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Patient", "Patient")
                        .WithMany("Appointment")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Domain.Entities.DoctorSpecialization", "DoctorSpecialization")
                        .WithMany()
                        .HasForeignKey("DoctorSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("Domain.Entities.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorSpecialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorInterest")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Interest", "Interest")
                        .WithMany("DoctorInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("Domain.Entities.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithMany("Prescriptions")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithOne("Report")
                        .HasForeignKey("Domain.Entities.Report", "AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Report")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointment");

                    b.Navigation("DoctorInterest");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Navigation("DoctorInterests");
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
