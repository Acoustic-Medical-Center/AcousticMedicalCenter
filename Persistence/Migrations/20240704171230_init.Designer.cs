// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AcousticDbContext))]
    [Migration("20240704171230_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8769),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8772),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8781),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8782),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8786),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8787),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 6, 28, 8, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 27, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 6, 27, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 6, 27, 10, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 51,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 56,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 100,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 101,
                            AppointmentTime = new DateTime(2024, 7, 5, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 102,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 103,
                            AppointmentTime = new DateTime(2024, 7, 5, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 104,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 105,
                            AppointmentTime = new DateTime(2024, 7, 5, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 106,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 107,
                            AppointmentTime = new DateTime(2024, 7, 5, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 108,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 109,
                            AppointmentTime = new DateTime(2024, 7, 5, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 110,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 111,
                            AppointmentTime = new DateTime(2024, 7, 5, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 112,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 113,
                            AppointmentTime = new DateTime(2024, 7, 5, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(8958),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorSpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorSpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Biography = "Id 3 olan Doktor Özgeçmiş Example asd",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8603),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8613),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8615),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8616),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8617),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8617),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8618),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8619),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8620),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8621),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8622),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8623),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8624),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8649),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 17,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8650),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 18,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8651),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 19,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8652),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 20,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8653),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 21,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8654),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 22,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8655),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 23,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8656),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 24,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8657),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 25,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8658),
                            DoctorSpecializationId = 1,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 26,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8658),
                            DoctorSpecializationId = 5,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 27,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8659),
                            DoctorSpecializationId = 8,
                            Experience = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("DoctorInterests");

                    b.HasData(
                        new
                        {
                            DoctorId = 3,
                            InterestId = 1
                        },
                        new
                        {
                            DoctorId = 3,
                            InterestId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 7
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DoctorSpecializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3373),
                            NameEN = "Neurosurgery",
                            NameTR = "Beyin ve Sinir Cerrahisi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3389),
                            NameEN = "Dermatology",
                            NameTR = "Dermatoloji"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3390),
                            NameEN = "General Surgery",
                            NameTR = "Genel Cerrahi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3391),
                            NameEN = "Ophthalmology",
                            NameTR = "Göz Hastalıkları"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3392),
                            NameEN = "Internal Medicine",
                            NameTR = "İç Hastalıkları"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3393),
                            NameEN = "Obstetrics and Gynecology",
                            NameTR = "Kadın Hastalıkları ve Doğum"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3394),
                            NameEN = "Otorhinolaryngology",
                            NameTR = "Kulak Burun Boğaz"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3395),
                            NameEN = "Orthopedics and Traumatology",
                            NameTR = "Ortopedi ve Travmatoloji"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3396),
                            NameEN = "Urology",
                            NameTR = "Üroloji"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3397),
                            NameEN = "Pediatrics",
                            NameTR = "Çocuk Sağlığı ve Hastalıkları"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9123),
                            Name = "Kardiyoloji Araştırmaları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9132),
                            Name = "Çocuk Sağlığı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9135),
                            Name = "Onkoloji Tedavi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9138),
                            Name = "Nöroloji ve Beyin Cerrahisi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9141),
                            Name = "Endokrinoloji ve Metabolizma"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9145),
                            Name = "Gastroenteroloji ve Sindirim Sistemi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9148),
                            Name = "Psikiyatri ve Mental Sağlık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9151),
                            Name = "Aile Hekimliği ve Birinci Basamak Sağlık Hizmetleri"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9153),
                            Name = "Parkinson Hastalığı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9156),
                            Name = "Bunama"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3626),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3670),
                            Name = "Appointment.Delete"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3674),
                            Name = "Doctor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Main St",
                            AppointmentId = 0,
                            BloodType = "A+",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8478)
                        },
                        new
                        {
                            Id = 2,
                            Address = "1233 Main St",
                            AppointmentId = 0,
                            BloodType = "B+",
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8489)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosageInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationFindings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9352),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9361),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9365),
                            Diagnosis = "Diabetes Mellitus",
                            ExaminationFindings = "Fasting blood sugar level of 140 mg/dL"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(9368),
                            Diagnosis = "Chronic Obstructive Pulmonary Disease (COPD)",
                            ExaminationFindings = "Reduced lung function on spirometry"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(4701),
                            Email = "hasta1@example.com",
                            FirstName = "jJKj6zJuYyuGblzT55fLwqFtWBN+UdqzeUsOahipBNA=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "7U6O95176YRPY7DcZd5nqI6aWVKkqxXXpxTWWoCtbzw=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234567890",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(4827),
                            Email = "hasta2@example.com",
                            FirstName = "UyuPupdDvgPZIZylNV5HgnOehl+ZngSyxpnsatpUnYc=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "4tI8Lg6OXyGG/ogKljryPycdPOZYKD0RaEhYcOvORzY=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234512345",
                            UserType = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(4958),
                            Email = "doktor1@example.com",
                            FirstName = "C9J+kESc4wBKZG+Z4w+jPILUZ5TCLhBM2x9SweqOU1g=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "PaWWVeUWfsTn9D6aAolLHaugssxMmeMvD+GikUCac5Y=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234512312",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5100),
                            Email = "doktor4@example.com",
                            FirstName = "ArDT+FQXdNpmgvZ8Wx1goAAcdcy1bws/SKwDMjk2RcM=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "0cIKa9y8FwHUTLuimVdBa3Uy13jC5UNgrv5OpicFDNQ=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500004",
                            UserType = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5256),
                            Email = "doktor5@example.com",
                            FirstName = "MkSu4fxdP6zQ5CK1b5Xpelv9I2Ig9HOm+vG/AmyaGik=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "rFPv+zXvia6ws9voF95ALaL3kOcD5syLgHDCzF0N5NU=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500005",
                            UserType = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5420),
                            Email = "doktor6@example.com",
                            FirstName = "R57FcgyMavOEwcxMJA5NinxHsKMp3Nlc+3MrFIMEL1E=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Tuyfrl3fkT+p3docpNbdEhNr3ykPZhwdFSxNVRzyZds=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500006",
                            UserType = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5544),
                            Email = "doktor7@example.com",
                            FirstName = "3vYo5ciCvMRA7X1EFenBcyMPFu/F0ScupdLWmcjx6tw=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "G1IyA/W+GYJ4IkbnIf9daw27iZkNFvlsgUEJ75fQFLo=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500007",
                            UserType = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5667),
                            Email = "doktor8@example.com",
                            FirstName = "LFSFXaCeHHiiUGc3gQuf1es/n+byI1PW6yB5v6A0uhQ=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "kUWwF4fsN+aYgux3Umx8Riw36Tc8gqxWDJ09WJ4VD84=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500008",
                            UserType = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5788),
                            Email = "doktor9@example.com",
                            FirstName = "nIQHwP62Ix3YPXvFZix45k2dN90IB5bQPNqzCqybr0k=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "zkCr0xA67sVlh0dgdQSLlRUlllzoQ887niw/XkNQgus=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500009",
                            UserType = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(5896),
                            Email = "doktor10@example.com",
                            FirstName = "tRKnr08cLn7OLVIzMoTLoc/IqD2G3DXgrksAOBFElgI=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "xhDYiZQINDQuAIPKIgLWqtEa8MxJwsiqBibVR06Nwo0=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500010",
                            UserType = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6020),
                            Email = "doktor11@example.com",
                            FirstName = "LdeeqiUXzGaHL+kCNV4ichhm2mqKLlB3zuKjU9qSzAM=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "GCZyAJmMGwAUhdWnFjdF8m2E9BH73XZMuyAOQTCSAR8=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500011",
                            UserType = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6179),
                            Email = "doktor12@example.com",
                            FirstName = "Im0BdjBoYfx2b3/WQrTRs/YWaMUZ4yv1O/xeTLKqOzk=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "YFmwcY43NL6iSzyjE6CQ6kut8/U5+M0DE1dixnz5RGQ=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500012",
                            UserType = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6313),
                            Email = "doktor13@example.com",
                            FirstName = "GjN465wf91SgJZwuWi97UFxEPhRTOze2MkeFL21mDhU=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "PpUMgPdwM+kO6HVEoNiiOx/yeIo1qI5rjKEABUHjhs4=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500013",
                            UserType = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6419),
                            Email = "doktor14@example.com",
                            FirstName = "xLkO1o0uhjWoaNIaz6RRcXCvzk5ADE6RQ8pKHcn3+Bo=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "4USv9gi1hNnXOran80etgYqk8fQMMp4ycYJD4IO1icQ=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500014",
                            UserType = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6546),
                            Email = "doktor15@example.com",
                            FirstName = "h35hl3QL+d6k/Fcs9I0RI6ukYuekE81OD0VE6IoI9lM=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "NCnjV3z6jtJHbFcUSZOoAlK7dhx/dPJhIBxdxyaRpOg=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500015",
                            UserType = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6668),
                            Email = "doktor16@example.com",
                            FirstName = "RxBCZGd2hNlgVV2xzxns/hfgs3KdxX9JLi9GPISE+XU=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "DQiL+zVPA6OaKuXmQoO13CZnZ1pQ3UyeqlC4+xBwSvA=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500016",
                            UserType = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6792),
                            Email = "doktor17@example.com",
                            FirstName = "eU/WaNvB2g6AgZ81SVH9CdX4UQz9If8vFzv/Kt1bDeU=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "J5UN0eVWH5lWZN7p68SFiz6kUE439G7aZKWeHV3zI5o=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500017",
                            UserType = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(6965),
                            Email = "doktor18@example.com",
                            FirstName = "Zgr2s2wWvfS9A1sa1ZkAiEH7+tDXVqmr/tnDRQZwDcY=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "9TuKMODsRvUMp767V7Wp8OURgTvXbKsXzoixeo/D9m8=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500018",
                            UserType = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7074),
                            Email = "doktor19@example.com",
                            FirstName = "Dtgj5FUreO7osLgeeg626VGTU1XkZjp10kYyeg/sU3I=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "0cIKa9y8FwHUTLuimVdBa3Uy13jC5UNgrv5OpicFDNQ=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500019",
                            UserType = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7195),
                            Email = "doktor20@example.com",
                            FirstName = "ZpIdKBXIiVfHhKUxeqA1iwKfxxG2YhrSYSmsMbjcaMA=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "VxAqqjvO20HL8WYFIQ5k7232b5sPlfPXyyLphf1v8HA=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500020",
                            UserType = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7315),
                            Email = "doktor21@example.com",
                            FirstName = "V6cXQy56rXg43Y56mFPJBuPhzc3v1Jnzn+46SLd2Uoc=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Bp3vBNouhArb8KYIj2N1qU5v2zXjXFqUQ3q5gCoHhjI=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500021",
                            UserType = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7428),
                            Email = "doktor22@example.com",
                            FirstName = "MrvGVZzVvzLEh7t3If8kIPhakH6huxZ/7L1CfUmwYoU=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "KsnQHnKUAFLmr2nd4w5wJ/CJwMe97Io9po5N+IoTB5U=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500022",
                            UserType = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7538),
                            Email = "doktor23@example.com",
                            FirstName = "8/0yw7U9grwZiM2o1Cbj3a7N/VQC5MUN5OO8y6w4d+g=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Zt6k4MDLOnNTpDL54GMIhlGoYmjHXsIwHuvKJw1lBtg=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500023",
                            UserType = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7709),
                            Email = "doktor24@example.com",
                            FirstName = "7j26j+5nIckB/lTUDFGu9Lrt6+YRDQzvE8BNpGjg6to=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "jSlrCaMkMPTyWL/UgDdogXwFsqxJM2hGRO3D3ki3SB0=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500024",
                            UserType = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7830),
                            Email = "doktor25@example.com",
                            FirstName = "sgFEBVDD/HbodbXFK2j3X/+H3xFjCb2Nglxx/sdVBX8=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "GFFDTZ9YZ9BbDp2msw2T9d/7L0eoUPw6dHTXlMLTOQI=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500025",
                            UserType = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(7952),
                            Email = "doktor26@example.com",
                            FirstName = "tjFGE5PBJZOk8/WEU9k75PhCuY0WXuBYfbrllBeA1l0=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "RHczLSubdaAPMiNvcxeqzC/EtX3oI66YVNHmRHmOwfw=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500026",
                            UserType = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8045),
                            Email = "doktor27@example.com",
                            FirstName = "4/rSlgbDYDq8Fz50vbExKo+Fbqwkg4brmzDdpmspTko=",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "7DTh5FiFgY608BAk3LROCK0rCs8SnOzoOIvntCqFScQ=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234500027",
                            UserType = 1
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(2024, 7, 4, 17, 12, 29, 969, DateTimeKind.Utc).AddTicks(8202),
                            Email = "admin@example.com",
                            FirstName = "5wqaBWk/+na3Mey9j9NRkin0jk3GhJuUrARSVOjE97w=",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "hpwlh6df81jer01fiS3nezYRoQ+zRTswYGg5ZBfLj2A=",
                            PasswordHash = new byte[] { 155, 191, 65, 62, 63, 215, 229, 37, 205, 182, 64, 202, 231, 131, 83, 12, 35, 131, 147, 147, 109, 194, 237, 223, 7, 107, 213, 131, 146, 10, 77, 11, 6, 214, 248, 186, 155, 28, 253, 7, 164, 74, 105, 28, 214, 179, 25, 179, 226, 157, 216, 67, 31, 151, 100, 81, 160, 239, 8, 70, 136, 0, 102, 108 },
                            PasswordSalt = new byte[] { 131, 172, 16, 150, 37, 95, 77, 148, 240, 142, 19, 123, 6, 105, 10, 158, 91, 27, 55, 136, 169, 91, 33, 124, 4, 90, 21, 183, 233, 164, 80, 13, 177, 151, 150, 239, 230, 238, 37, 63, 30, 34, 24, 157, 11, 162, 249, 22, 200, 100, 105, 15, 36, 234, 209, 244, 247, 173, 232, 142, 20, 227, 122, 157, 34, 70, 14, 179, 211, 90, 155, 128, 18, 59, 98, 161, 43, 193, 133, 54, 11, 50, 248, 204, 42, 103, 236, 215, 79, 80, 1, 110, 9, 132, 162, 164, 178, 164, 221, 217, 18, 95, 77, 31, 28, 199, 214, 112, 244, 125, 93, 40, 125, 237, 202, 45, 52, 3, 70, 207, 119, 16, 14, 73, 197, 48, 157, 129 },
                            PhoneNumber = "1234512345",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3784),
                            OperationClaimId = 1,
                            UserId = 99
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3792),
                            OperationClaimId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3797),
                            OperationClaimId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 4, 20, 12, 29, 969, DateTimeKind.Local).AddTicks(3799),
                            OperationClaimId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointment")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Patient", "Patient")
                        .WithMany("Appointment")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Domain.Entities.DoctorSpecialization", "DoctorSpecialization")
                        .WithMany()
                        .HasForeignKey("DoctorSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("Domain.Entities.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorSpecialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorInterest")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Interest", "Interest")
                        .WithMany("DoctorInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("Domain.Entities.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithMany("Prescriptions")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithOne("Report")
                        .HasForeignKey("Domain.Entities.Report", "AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Report")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointment");

                    b.Navigation("DoctorInterest");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Navigation("DoctorInterests");
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
