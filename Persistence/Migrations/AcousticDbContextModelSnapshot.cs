// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(AcousticDbContext))]
    partial class AcousticDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentTime = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3237),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3242),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AppointmentTime = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3252),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3252),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AppointmentTime = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3256),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3257),
                            DoctorId = 3,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AppointmentTime = new DateTime(2024, 6, 28, 8, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 27, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AppointmentTime = new DateTime(2024, 6, 27, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 8, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            AppointmentTime = new DateTime(2024, 6, 27, 9, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            AppointmentTime = new DateTime(2024, 6, 27, 10, 0, 3, 785, DateTimeKind.Unspecified).AddTicks(6820),
                            CreatedDate = new DateTime(2024, 6, 28, 13, 30, 3, 785, DateTimeKind.Unspecified).AddTicks(6830),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 12,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 50,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 51,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 52,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 53,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 54,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 55,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 56,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 57,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 58,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 59,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 60,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 61,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 62,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 63,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 4,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 100,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 101,
                            AppointmentTime = new DateTime(2024, 7, 6, 10, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 102,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 103,
                            AppointmentTime = new DateTime(2024, 7, 6, 11, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 104,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 105,
                            AppointmentTime = new DateTime(2024, 7, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 106,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 107,
                            AppointmentTime = new DateTime(2024, 7, 6, 13, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 108,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 109,
                            AppointmentTime = new DateTime(2024, 7, 6, 14, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 110,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 111,
                            AppointmentTime = new DateTime(2024, 7, 6, 15, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 112,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 0, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        },
                        new
                        {
                            Id = 113,
                            AppointmentTime = new DateTime(2024, 7, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3433),
                            DoctorId = 5,
                            IsDeleted = false,
                            PatientId = 2,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorSpecializationId")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorSpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Biography = "Id 3 olan Doktor Özgeçmiş Example asd",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2966),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3003),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3004),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3005),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3006),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3007),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3008),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3009),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3010),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3011),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 13,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3012),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 14,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3013),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 15,
                            Biography = "Göz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3014),
                            DoctorSpecializationId = 7,
                            Experience = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 16,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3015),
                            DoctorSpecializationId = 1,
                            Experience = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 17,
                            Biography = "Dahiliye Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3016),
                            DoctorSpecializationId = 4,
                            Experience = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 18,
                            Biography = "Nöroloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3017),
                            DoctorSpecializationId = 6,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 19,
                            Biography = "Psikiyatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3018),
                            DoctorSpecializationId = 9,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 20,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3019),
                            DoctorSpecializationId = 5,
                            Experience = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 21,
                            Biography = "Dermatoloji Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3020),
                            DoctorSpecializationId = 10,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 22,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3020),
                            DoctorSpecializationId = 8,
                            Experience = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 23,
                            Biography = "Genel Cerrahi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3021),
                            DoctorSpecializationId = 3,
                            Experience = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 24,
                            Biography = "Kalp Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3022),
                            DoctorSpecializationId = 2,
                            Experience = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 25,
                            Biography = "Ortopedi Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3023),
                            DoctorSpecializationId = 1,
                            Experience = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 26,
                            Biography = "Pediatri Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3024),
                            DoctorSpecializationId = 5,
                            Experience = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 27,
                            Biography = "Kulak Burun Boğaz Doktoru Özgeçmiş Example",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(3025),
                            DoctorSpecializationId = 8,
                            Experience = 3,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId", "InterestId");

                    b.HasIndex("InterestId");

                    b.ToTable("DoctorInterests");

                    b.HasData(
                        new
                        {
                            DoctorId = 3,
                            InterestId = 1
                        },
                        new
                        {
                            DoctorId = 3,
                            InterestId = 2
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 7
                        },
                        new
                        {
                            DoctorId = 4,
                            InterestId = 8
                        });
                });

            modelBuilder.Entity("Domain.Entities.DoctorSpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DoctorSpecializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9131),
                            NameEN = "Neurosurgery",
                            NameTR = "Beyin ve Sinir Cerrahisi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9146),
                            NameEN = "Dermatology",
                            NameTR = "Dermatoloji"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9148),
                            NameEN = "General Surgery",
                            NameTR = "Genel Cerrahi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9149),
                            NameEN = "Ophthalmology",
                            NameTR = "Göz Hastalıkları"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9150),
                            NameEN = "Internal Medicine",
                            NameTR = "İç Hastalıkları"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9151),
                            NameEN = "Obstetrics and Gynecology",
                            NameTR = "Kadın Hastalıkları ve Doğum"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9152),
                            NameEN = "Otorhinolaryngology",
                            NameTR = "Kulak Burun Boğaz"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9152),
                            NameEN = "Orthopedics and Traumatology",
                            NameTR = "Ortopedi ve Travmatoloji"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9153),
                            NameEN = "Urology",
                            NameTR = "Üroloji"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9154),
                            NameEN = "Pediatrics",
                            NameTR = "Çocuk Sağlığı ve Hastalıkları"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeedbackMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3611),
                            Name = "Kardiyoloji Araştırmaları"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3623),
                            Name = "Çocuk Sağlığı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3627),
                            Name = "Onkoloji Tedavi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3630),
                            Name = "Nöroloji ve Beyin Cerrahisi"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3634),
                            Name = "Endokrinoloji ve Metabolizma"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3637),
                            Name = "Gastroenteroloji ve Sindirim Sistemi"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3641),
                            Name = "Psikiyatri ve Mental Sağlık"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3644),
                            Name = "Aile Hekimliği ve Birinci Basamak Sağlık Hizmetleri"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3647),
                            Name = "Parkinson Hastalığı"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3651),
                            Name = "Bunama"
                        });
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9427),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9438),
                            Name = "Appointment.Delete"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9444),
                            Name = "Doctor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<string>("BloodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Main St",
                            AppointmentId = 0,
                            BloodType = "A+",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2858)
                        },
                        new
                        {
                            Id = 2,
                            Address = "1233 Main St",
                            AppointmentId = 0,
                            BloodType = "B+",
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2867)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosageInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MedicationDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExaminationFindings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId")
                        .IsUnique();

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppointmentId = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3901),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 2,
                            AppointmentId = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3909),
                            Diagnosis = " Hipertansiyon",
                            ExaminationFindings = "Yüksek kan basıncı"
                        },
                        new
                        {
                            Id = 3,
                            AppointmentId = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3913),
                            Diagnosis = "Diabetes Mellitus",
                            ExaminationFindings = "Fasting blood sugar level of 140 mg/dL"
                        },
                        new
                        {
                            Id = 4,
                            AppointmentId = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 389, DateTimeKind.Local).AddTicks(3916),
                            Diagnosis = "Chronic Obstructive Pulmonary Disease (COPD)",
                            ExaminationFindings = "Reduced lung function on spirometry"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(515),
                            Email = "hasta1@example.com",
                            FirstName = "46fw7Rk8/m7cXdvb9VCuiw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "IY+uLFq91e9Pl1fZz9KL+g==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234567890",
                            UserType = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(619),
                            Email = "hasta2@example.com",
                            FirstName = "lx191yNB5UTgUeNqX1QIZQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "ESeBAof1D3qOrdvr0NsjqQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234512345",
                            UserType = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(694),
                            Email = "doktor1@example.com",
                            FirstName = "JJIVK0Z5Q3xurg/5rwsjpw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "SbwDEUPBok2ObkCL8mzFcQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234512312",
                            UserType = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(807),
                            Email = "doktor4@example.com",
                            FirstName = "FfeaE5zn6NjabjeVhYSrEQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "dwMtHvVvQqj6d7sMPCqIjg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500004",
                            UserType = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(896),
                            Email = "doktor5@example.com",
                            FirstName = "+au//BigQ3yTZoy4bkmhhQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "dzHbICsDLYy/vGyYJIPZfQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500005",
                            UserType = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(973),
                            Email = "doktor6@example.com",
                            FirstName = "Mh0v4J32+JlNpaD/O7+qSA==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "+hNFC6xqdqf8w9sO855a0Q==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500006",
                            UserType = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1046),
                            Email = "doktor7@example.com",
                            FirstName = "Ibn6o8AedzQLx6T8v7QyWQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "qApbKXsPUcTvGAWZiov2eg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500007",
                            UserType = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1121),
                            Email = "doktor8@example.com",
                            FirstName = "QRc31Nk0c/N3r0eGOY3tJg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "crndYAoJPeqqluXZHHwnzQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500008",
                            UserType = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1188),
                            Email = "doktor9@example.com",
                            FirstName = "2vpZVUEDo5Auij4xmX6p/w==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "pnrXKW7b8Nkl2aPQe6wmIA==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500009",
                            UserType = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1314),
                            Email = "doktor10@example.com",
                            FirstName = "qZKdo9nxms9FWbRIQ6mDQg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "72UZHOJjBL5fuqnE5KqkAA==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500010",
                            UserType = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1379),
                            Email = "doktor11@example.com",
                            FirstName = "jj9UNKyFcbh2ikUCQQDWyw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "Etzl4OT8hsUVt6ZxK/O0LA==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500011",
                            UserType = 1
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1443),
                            Email = "doktor12@example.com",
                            FirstName = "Q4daCkyHEECDbBgMNxgSIA==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "/Q9/SHuMD9cCphQ2hpSmJg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500012",
                            UserType = 1
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1532),
                            Email = "doktor13@example.com",
                            FirstName = "w+eXoITM5M9bWhvdxONk6g==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "jzee7V57E88iuKsNYWgVYw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500013",
                            UserType = 1
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1616),
                            Email = "doktor14@example.com",
                            FirstName = "onmhUNgVYSb9KJWjNTgeig==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "QjBL/R6X9KC7lG1rhgidbw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500014",
                            UserType = 1
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1689),
                            Email = "doktor15@example.com",
                            FirstName = "Fvj3ZYvX8aHqo+f8cu9Hgw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "IqHJenJjFanZMJg+oHogDw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500015",
                            UserType = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1760),
                            Email = "doktor16@example.com",
                            FirstName = "2OrR7nTyK7M9EzSHBXuaOw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "PQ79eSlatrg1jKu+RShUWw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500016",
                            UserType = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1826),
                            Email = "doktor17@example.com",
                            FirstName = "CxBc6OuQft7mnBW4YZ2RmQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "M/0Rh8M/57cW6K5KSeg/wQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500017",
                            UserType = 1
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1864),
                            Email = "doktor18@example.com",
                            FirstName = "v8S/QBqz7DdlbUyIGJVanw==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "HEnM1rpNCBeMA1OQBWYQQA==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500018",
                            UserType = 1
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(1952),
                            Email = "doktor19@example.com",
                            FirstName = "qQeUOmjbsPj9QrelGnJ0xw==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "dwMtHvVvQqj6d7sMPCqIjg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500019",
                            UserType = 1
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2064),
                            Email = "doktor20@example.com",
                            FirstName = "XGLB1Jqkf8ye3RiI7REdtg==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "asHqAzJLyIiq8nFybKhJ9Q==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500020",
                            UserType = 1
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2120),
                            Email = "doktor21@example.com",
                            FirstName = "E6GrrCDe0S5fe/J0cQT0QQ==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "F5wwQbK4qmtX1bWH9FPM4w==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500021",
                            UserType = 1
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2270),
                            Email = "doktor22@example.com",
                            FirstName = "NTN4MQGjhs5QmulzI20AUQ==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "3uGzHpqFlftm4h46r6sCvg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500022",
                            UserType = 1
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2347),
                            Email = "doktor23@example.com",
                            FirstName = "F9vfnlFH27RRbGIAlLcUrg==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "zxIs9+mg1FC/hF/oGsX7yg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500023",
                            UserType = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2420),
                            Email = "doktor24@example.com",
                            FirstName = "76Jr0erPduMYIgqOy5Gm2A==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "ZVYa/Ha75fykIUoBnPYU2w==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500024",
                            UserType = 1
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2490),
                            Email = "doktor25@example.com",
                            FirstName = "Gnvo6mwNUF/bN9v9ID485w==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "qJCxvSS+EnCd4srQEbeJvw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500025",
                            UserType = 1
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2563),
                            Email = "doktor26@example.com",
                            FirstName = "Erzb68h8hV8wJ2vAGBiz5Q==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "tZEaxP2Ab3PHXSqcANuRYw==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500026",
                            UserType = 1
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2601),
                            Email = "doktor27@example.com",
                            FirstName = "RHmGtLmFF2rZIizvT6WWJg==",
                            Gender = "Female",
                            IsDeleted = false,
                            LastName = "cUcUFQAnZR4CocSgPu3OUg==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234500027",
                            UserType = 1
                        },
                        new
                        {
                            Id = 99,
                            CreatedDate = new DateTime(2024, 7, 5, 14, 10, 24, 389, DateTimeKind.Utc).AddTicks(2691),
                            Email = "admin@example.com",
                            FirstName = "aNbdnOzUNuGnMPCOxe7GbA==",
                            Gender = "Male",
                            IsDeleted = false,
                            LastName = "7ZoRxRkAs9bCJPAAcPqRUQ==",
                            PasswordHash = new byte[] { 80, 162, 202, 177, 143, 176, 17, 202, 231, 168, 0, 149, 61, 182, 225, 238, 78, 176, 89, 36, 74, 43, 161, 148, 237, 9, 161, 220, 10, 65, 95, 193, 7, 39, 208, 218, 127, 131, 205, 28, 11, 151, 146, 117, 173, 234, 33, 213, 159, 82, 225, 187, 192, 2, 240, 30, 171, 127, 18, 64, 18, 95, 242, 9 },
                            PasswordSalt = new byte[] { 238, 27, 192, 180, 110, 57, 63, 56, 89, 21, 36, 241, 211, 67, 222, 85, 102, 190, 172, 213, 116, 194, 152, 231, 246, 150, 229, 113, 125, 115, 180, 153, 4, 87, 193, 191, 67, 147, 226, 83, 248, 106, 171, 220, 189, 216, 11, 82, 192, 162, 248, 171, 34, 82, 139, 147, 28, 60, 183, 159, 253, 61, 11, 169, 37, 66, 133, 193, 101, 112, 56, 232, 49, 105, 114, 115, 58, 233, 43, 240, 170, 87, 3, 188, 100, 245, 8, 25, 10, 110, 148, 77, 96, 253, 23, 195, 53, 61, 38, 87, 141, 181, 98, 54, 116, 212, 156, 136, 199, 172, 59, 50, 102, 170, 137, 127, 48, 79, 249, 172, 153, 205, 134, 201, 39, 207, 74, 246 },
                            PhoneNumber = "1234512345",
                            UserType = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9537),
                            OperationClaimId = 1,
                            UserId = 99
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9546),
                            OperationClaimId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9551),
                            OperationClaimId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 7, 5, 17, 10, 24, 388, DateTimeKind.Local).AddTicks(9554),
                            OperationClaimId = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("Appointment")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Patient", "Patient")
                        .WithMany("Appointment")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Domain.Entities.DoctorSpecialization", "DoctorSpecialization")
                        .WithMany()
                        .HasForeignKey("DoctorSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Doctor")
                        .HasForeignKey("Domain.Entities.Doctor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorSpecialization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.DoctorInterest", b =>
                {
                    b.HasOne("Domain.Entities.Doctor", "Doctor")
                        .WithMany("DoctorInterest")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Interest", "Interest")
                        .WithMany("DoctorInterests")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Interest");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithOne("Patient")
                        .HasForeignKey("Domain.Entities.Patient", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Prescription", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithMany("Prescriptions")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.Report", b =>
                {
                    b.HasOne("Domain.Entities.Appointment", "Appointment")
                        .WithOne("Report")
                        .HasForeignKey("Domain.Entities.Report", "AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.UserOperationClaim", b =>
                {
                    b.HasOne("Domain.Entities.OperationClaim", "OperationClaim")
                        .WithMany("UserOperationClaims")
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Appointment", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("Report")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Navigation("Appointment");

                    b.Navigation("DoctorInterest");
                });

            modelBuilder.Entity("Domain.Entities.Interest", b =>
                {
                    b.Navigation("DoctorInterests");
                });

            modelBuilder.Entity("Domain.Entities.OperationClaim", b =>
                {
                    b.Navigation("UserOperationClaims");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Doctor")
                        .IsRequired();

                    b.Navigation("Patient")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
